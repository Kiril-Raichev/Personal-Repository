@using Poodle_E_Learning_Platform.Services;
@using Poodle_E_Learning_Platform.Models;
@inject ICourseService courseService;
@inject IUsersService usersService;
@inject Poodle_E_Learning_Platform.Helpers.AuthorizationHelper authorizationHelper
@inject Poodle_E_Learning_Platform.Repositories.IUsersRepository userRepository
@inject Poodle_E_Learning_Platform.Repositories.ICourseRepository courseRepository

@{
    var loggedUser = this.userRepository.GetByEmail(authorizationHelper.CurrentUser);
    var allCourses = this.courseRepository.GetAll();
    var duration = "";
}
@if (loggedUser == null)
{
    <partial name="../Shared/Error.cshtml" />
}
else
{
    <!-- Courses Start -->
    <div class="container-xxl py-5">
        <div class="container">
            <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
                <h6 class="section-title bg-white text-center text-primary px-3">Courses</h6>
                @if (loggedUser.Role == UserRole.Student)
                {
                    <h1 class="mb-5">Courses You're Enrolled In:</h1>
                }
                else if (loggedUser.Role == UserRole.Teacher)
                {
                    <h1 class="mb-5">Courses You're Teaching</h1>
                }

            </div>
            <div class="row g-4 justify-content-center">
                @if (loggedUser.Role == UserRole.Student)
                {
                    @foreach (var userCourse in loggedUser.UserCourses)
                    {

                        if (userCourse.UserId == loggedUser.Id)
                        {
                            <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.1s">
                                <div class="course-item bg-light">
                                    <div class="position-relative overflow-hidden">
                                        <img class="img-thImbnail" style="height: 260px;width: 450px" src=@Url.Content(userCourse.Course.ImgSource) alt="">
                                        <div class="w-100 d-flex justify-content-center position-absolute bottom-0 start-0 mb-4">
                                            <a href="../courses/details/@userCourse.Course.Id" class="flex-shrink-0 btn btn-sm btn-primary px-3 border-end" style="border-radius: 30px 0 0 30px;">Read More</a>
                                            <a asp-action="Unenroll" asp-controller="User" asp-route-courseId="@userCourse.Course.Id" asp-route-userId="@loggedUser.Id" class="flex-shrink-0 btn btn-sm btn-danger px-3" style="border-radius: 0 30px 30px 0;">Unenroll</a>
                                        </div>
                                    </div>
                                    <div class="text-center p-4 pb-0">
                                        <h5 class="mb-4"> @userCourse.Course.Title</h5>
                                    </div>
                                    <div class="d-flex border-top">
                                        <small class="flex-fill text-center border-end py-2"><i class="bi bi-person-circle text-primary me-2"></i>Head Teacher in charge: @userCourse.Course.CreatedBy</small>
                                    </div>
                                    <div class="d-flex border-top">
                                        @if (userCourse.Course.Visibility == Poodle_E_Learning_Platform.Models.CourseVisibility.Public)
                                        {
                                            <small class="flex-fill text-center border-end py-2"><i class="fa fa-eye text-primary me-2"></i>@Url.Content(userCourse.Course.Visibility.ToString())</small>
                                        }
                                        else
                                        {
                                            <small class="flex-fill text-center border-end py-2"><i class="fa fa-eye-slash text-primary me-2"></i>@Url.Content(userCourse.Course.Visibility.ToString())</small>
                                        }
                                        @{
                                            if (userCourse.Course.Duration > 60)
                                            {
                                                duration = $"{userCourse.Course.Duration / 60} Hrs {userCourse.Course.Duration % 60} Min";
                                            }
                                            else
                                            {
                                                duration = $"{userCourse.Course.Duration} Min";
                                            }
                                        }
                                        <small class="flex-fill text-center border-end py-2"><i class="fa fa-clock text-primary me-2"></i>@duration</small>
                                        @{
                                            var course = allCourses.Where(c => c.Id == userCourse.CourseId).FirstOrDefault();
                                        }
                                        <small class="flex-fill text-center py-2"><i class="bi bi-people-fill text-primary me-2"></i>@course.Users.Count Students</small>
                                    </div>
                                </div>
                            </div>
                        }
                    }

                }
                @if (loggedUser.Role == UserRole.Teacher)
                {
                    foreach (var course in allCourses)
                    {
                        var loggedName = $"{loggedUser.FirstName} {loggedUser.LastName}";

                        if (course.CreatedBy == loggedName)
                        {
                            <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.1s">
                                <div class="course-item bg-light">
                                    <div class="position-relative overflow-hidden">
                                        <img class="img-thImbnail" style="height: 260px;width: 450px" src=@Url.Content(course.ImgSource) alt="">
                                        <div class="w-100 d-flex justify-content-center position-absolute bottom-0 start-0 mb-4">
                                            <a href="../courses/details/@course.Id" class="flex-shrink-0 btn btn-sm btn-primary px-3 border-end" style="border-radius: 30px 0 0 30px;">Read More</a>
                                            <a asp-action="Delete" asp-controller="Courses" asp-route-id="@course.Id" class="flex-shrink-0 btn btn-sm btn-danger px-3" style="border-radius: 0 30px 30px 0;">Delete</a>
                                        </div>
                                    </div>
                                    <div class="text-center p-4 pb-0">
                                        <h5 class="mb-4"> @course.Title</h5>
                                    </div>
                                    <div class="d-flex border-top">
                                        <small class="flex-fill text-center border-end py-2"><i class="bi bi-person-circle text-primary me-2"></i>Head Teacher in charge: @course.CreatedBy</small>
                                    </div>
                                    <div class="d-flex border-top">
                                        @if (course.Visibility == Poodle_E_Learning_Platform.Models.CourseVisibility.Public)
                                        {
                                            <small class="flex-fill text-center border-end py-2"><i class="fa fa-eye text-primary me-2"></i>@Url.Content(course.Visibility.ToString())</small>
                                        }
                                        else
                                        {
                                            <small class="flex-fill text-center border-end py-2"><i class="fa fa-eye-slash text-primary me-2"></i>@Url.Content(course.Visibility.ToString())</small>
                                        }
                                        @{
                                            if (course.Duration > 60)
                                            {
                                                duration = $"{course.Duration / 60} Hrs {course.Duration % 60} Min";
                                            }
                                            else
                                            {
                                                duration = $"{course.Duration} Min";
                                            }
                                        }
                                        <small class="flex-fill text-center border-end py-2"><i class="fa fa-clock text-primary me-2"></i>@duration</small>

                                        <small class="flex-fill text-center py-2"><i class="bi bi-people-fill text-primary me-2"></i>@course.Users.Count Students</small>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
}
<!-- Courses End -->